[{"D:\\notes-app\\client\\src\\index.js":"1","D:\\notes-app\\client\\src\\App.js":"2","D:\\notes-app\\client\\src\\components\\Signin.js":"3","D:\\notes-app\\client\\src\\components\\Signup.js":"4","D:\\notes-app\\client\\src\\components\\Welcome.js":"5","D:\\notes-app\\client\\src\\components\\NotFound.js":"6","D:\\notes-app\\client\\src\\components\\ProtectedRoute.js":"7","D:\\notes-app\\client\\src\\components\\Nav\\Header.js":"8","D:\\notes-app\\client\\src\\components\\Notes\\Notes.js":"9","D:\\notes-app\\client\\src\\components\\Notes\\NoteDetails.js":"10","D:\\notes-app\\client\\src\\context\\UserContext.js":"11","D:\\notes-app\\client\\src\\components\\Notes\\AddNote.js":"12","D:\\notes-app\\client\\src\\context\\NoteContext.js":"13","D:\\notes-app\\client\\src\\context\\AuthContext.js":"14","D:\\notes-app\\client\\src\\components\\Nav\\Navbar.js":"15","D:\\notes-app\\client\\src\\components\\Notes\\SearchNote.js":"16"},{"size":197,"mtime":1611503242911,"results":"17","hashOfConfig":"18"},{"size":1720,"mtime":1611852093699,"results":"19","hashOfConfig":"18"},{"size":2948,"mtime":1612634854847,"results":"20","hashOfConfig":"18"},{"size":2580,"mtime":1612634859811,"results":"21","hashOfConfig":"18"},{"size":953,"mtime":1611689007420,"results":"22","hashOfConfig":"18"},{"size":292,"mtime":1611503272653,"results":"23","hashOfConfig":"18"},{"size":575,"mtime":1611503272707,"results":"24","hashOfConfig":"18"},{"size":2116,"mtime":1612298830788,"results":"25","hashOfConfig":"18"},{"size":2505,"mtime":1612459067963,"results":"26","hashOfConfig":"18"},{"size":3051,"mtime":1612084006486,"results":"27","hashOfConfig":"18"},{"size":1406,"mtime":1611503320859,"results":"28","hashOfConfig":"18"},{"size":2647,"mtime":1612123665286,"results":"29","hashOfConfig":"18"},{"size":379,"mtime":1611503320822,"results":"30","hashOfConfig":"18"},{"size":370,"mtime":1611503320772,"results":"31","hashOfConfig":"18"},{"size":1571,"mtime":1612298628740,"results":"32","hashOfConfig":"18"},{"size":2183,"mtime":1612090508017,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"v2cmw2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"D:\\notes-app\\client\\src\\index.js",[],["71","72"],"D:\\notes-app\\client\\src\\App.js",[],"D:\\notes-app\\client\\src\\components\\Signin.js",[],"D:\\notes-app\\client\\src\\components\\Signup.js",[],"D:\\notes-app\\client\\src\\components\\Welcome.js",[],"D:\\notes-app\\client\\src\\components\\NotFound.js",[],"D:\\notes-app\\client\\src\\components\\ProtectedRoute.js",[],"D:\\notes-app\\client\\src\\components\\Nav\\Header.js",[],"D:\\notes-app\\client\\src\\components\\Notes\\Notes.js",["73","74"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport { NoteContext } from \"../../context/NoteContext\";\r\nimport \"../../style/Notes.scss\";\r\nimport \"../../style/layout.scss\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst MainPage = () => {\r\n  const { userNotes, setUserNotes } = useContext(NoteContext);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      const res = await fetch(\"/notes/get\", {\r\n        method: \"GET\",\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n      const data = await res.json();\r\n      const renderNotes = data.map(({ _id, title, createdAt }) => {\r\n        return (\r\n          <div key={_id} className=\"notes-data\">\r\n            <div className=\"note-title\">\r\n              <Link to={`note/${_id}`}>\r\n                <p className=\"note-title-element\">{title}</p>\r\n              </Link>\r\n            </div>\r\n            <div className=\"note-date\">\r\n              <p className=\"note-date-element\">{createdAt.slice(0, 10)}</p>\r\n            </div>\r\n            <div className=\"note-button\">\r\n              <Link to={`note/${_id}`}>\r\n                <button className=\"edit-button\">\r\n                  <EditIcon />\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <div className=\"note-button\">\r\n              <button className=\"delete-button\" onClick={() => deleteNote(_id)}>\r\n                <DeleteIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n      setUserNotes(renderNotes);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function deleteNote(userId) {\r\n    const res = await fetch(\"/note/delete\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: userId,\r\n      }),\r\n    });\r\n    history.push(\"/\");\r\n    history.push(\"/notes\");\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <h1 className=\"header-text\">Moje notatki</h1>\r\n        </header>\r\n        <div className=\"main\">\r\n          <div className=\"notes-info\">{userNotes}</div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","D:\\notes-app\\client\\src\\components\\Notes\\NoteDetails.js",["75"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport \"../../style/NoteDetails.scss\";\r\nimport \"../../style/layout.scss\";\r\nimport \"../../style/button.scss\";\r\n\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst NoteDetails = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [contentError, setContentError] = useState(\"\");\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const prevNote = usePrevious(noteContent);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      const res = await fetch(\"/note/get\", {\r\n        method: \"GET\",\r\n        headers: { \"x-auth-token\": token, \"note-id\": id },\r\n      });\r\n\r\n      const { title, content } = await res.json();\r\n\r\n      setNoteTitle(title);\r\n      setNoteContent(content);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function updateNote() {\r\n    const res = await fetch(\"/note/update\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id,\r\n        content: noteContent,\r\n        title: noteTitle,\r\n      }),\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (data.errors) {\r\n      setContentError(\"Brakuje tytułu lub treści\");\r\n      setTimeout(() => {\r\n        setContentError(\"\");\r\n      }, 2000);\r\n    } else {\r\n      history.push(\"/notes\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <ArrowBackIcon\r\n            className=\"arrow-back-icon\"\r\n            style={{ fontSize: \"2rem\" }}\r\n            onClick={() => {\r\n              history.push(\"/notes\");\r\n            }}\r\n          />\r\n          <textarea\r\n            value={noteTitle}\r\n            onChange={(e) => setNoteTitle(e.target.value)}\r\n            className=\"header-textarea\"\r\n            maxLength=\"20\"\r\n          >\r\n            {noteTitle}\r\n          </textarea>\r\n        </header>\r\n        <div className=\"main-notes\">\r\n          <textarea\r\n            className=\"note-details-content\"\r\n            value={noteContent}\r\n            onChange={(e) => setNoteContent(e.target.value)}\r\n          ></textarea>\r\n          {contentError ? (\r\n            <span className=\"error\">\r\n              <InfoIcon />\r\n              {contentError}\r\n            </span>\r\n          ) : null}\r\n\r\n          {prevNote ? (\r\n            <button className=\"update-note-button\" onClick={updateNote}>\r\n              Zapisz\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n","D:\\notes-app\\client\\src\\context\\UserContext.js",["76"],"import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n  const [userData, setUserData] = useState({\r\n    token: \"\",\r\n    user: \"\",\r\n  });\r\n  const { setIsAuth } = useContext(AuthContext);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const isLogin = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n      }\r\n      const tokenRes = await fetch(\"/validToken\", {\r\n        method: \"POST\",\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n      const tokenIsValid = await tokenRes.json();\r\n\r\n      if (tokenIsValid) {\r\n        const userRes = await fetch(\"/user\", {\r\n          method: \"GET\",\r\n          headers: { \"x-auth-token\": token },\r\n        });\r\n        const userData = await userRes.json();\r\n        setUserData({\r\n          token,\r\n          user: userData.id,\r\n        });\r\n        setIsAuth(true);\r\n        history.push(\"/notes\");\r\n      }\r\n    };\r\n\r\n    isLogin();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userData, setUserData }}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","D:\\notes-app\\client\\src\\components\\Notes\\AddNote.js",[],"D:\\notes-app\\client\\src\\context\\NoteContext.js",[],"D:\\notes-app\\client\\src\\context\\AuthContext.js",[],"D:\\notes-app\\client\\src\\components\\Nav\\Navbar.js",[],"D:\\notes-app\\client\\src\\components\\Notes\\SearchNote.js",["77"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport \"../../style/form.scss\";\r\nimport \"../../style/button.scss\";\r\nimport \"../../style/layout.scss\";\r\n\r\nconst SearchNote = () => {\r\n  const [note, setNote] = useState(\"\");\r\n  const [foundNote, setFoundNote] = useState([]);\r\n  const { userData } = useContext(UserContext);\r\n\r\n  async function fetchData(e) {\r\n    e.preventDefault();\r\n    const res = await fetch(\"/note/search\", {\r\n      method: \"GET\",\r\n      headers: { \"user-id\": userData.user, \"note-title\": note },\r\n    });\r\n    const data = await res.json();\r\n    const renderNotes = data.map(({ _id, title }) => {\r\n      return (\r\n        <div key={_id} className=\"notes-data\">\r\n          <div className=\"note-title\">\r\n            <Link to={`/note/${_id}`}>\r\n              <p className=\"note-title-element\" style={{ fontSize: \"1.6rem\" }}>\r\n                {title}\r\n              </p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let isNoteExist =\r\n      renderNotes.length > 0 ? (\r\n        renderNotes\r\n      ) : (\r\n        <span>Nie znaleziono notatki :(</span>\r\n      );\r\n    setFoundNote(isNoteExist);\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <h1 className=\"header-text\">Szukaj notatki</h1>\r\n        </header>\r\n        <form className=\"form-search-note\" onSubmit={fetchData}>\r\n          <input\r\n            className=\"input-search-note\"\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setNote(e.target.value);\r\n            }}\r\n            placeholder=\"Wpisz tytuł...\"\r\n          />\r\n          <button className=\"search-button\">\r\n            <ArrowForwardIcon style={{ fontSize: \"2rem\" }} />\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"main-search\">{foundNote}</div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchNote;\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":54,"column":6,"nodeType":"84","endLine":54,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":57,"column":11,"nodeType":"88","messageId":"89","endLine":57,"endColumn":14},{"ruleId":"82","severity":1,"message":"90","line":43,"column":6,"nodeType":"84","endLine":43,"endColumn":8,"suggestions":"91"},{"ruleId":"82","severity":1,"message":"92","line":44,"column":6,"nodeType":"84","endLine":44,"endColumn":8,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deleteNote' and 'setUserNotes'. Either include them or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has missing dependencies: 'history' and 'setIsAuth'. Either include them or remove the dependency array.",["99"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [deleteNote, setUserNotes]",{"range":"106","text":"107"},"Update the dependencies array to be: [id]",{"range":"108","text":"109"},"Update the dependencies array to be: [history, setIsAuth]",{"range":"110","text":"111"},[1790,1792],"[deleteNote, setUserNotes]",[1236,1238],"[id]",[1222,1224],"[history, setIsAuth]"]