[{"D:\\notes-app\\client\\src\\index.js":"1","D:\\notes-app\\client\\src\\App.js":"2","D:\\notes-app\\client\\src\\components\\Signin.js":"3","D:\\notes-app\\client\\src\\components\\Signup.js":"4","D:\\notes-app\\client\\src\\components\\Welcome.js":"5","D:\\notes-app\\client\\src\\components\\NotFound.js":"6","D:\\notes-app\\client\\src\\components\\ProtectedRoute.js":"7","D:\\notes-app\\client\\src\\components\\Nav\\Header.js":"8","D:\\notes-app\\client\\src\\components\\Notes\\Notes.js":"9","D:\\notes-app\\client\\src\\components\\Notes\\NoteDetails.js":"10","D:\\notes-app\\client\\src\\context\\UserContext.js":"11","D:\\notes-app\\client\\src\\components\\Notes\\AddNote.js":"12","D:\\notes-app\\client\\src\\context\\NoteContext.js":"13","D:\\notes-app\\client\\src\\context\\AuthContext.js":"14","D:\\notes-app\\client\\src\\components\\Nav\\Navbar.js":"15","D:\\notes-app\\client\\src\\components\\Notes\\SearchNote.js":"16","D:\\notes-app\\client\\src\\config\\serverURL.js":"17"},{"size":197,"mtime":1611503242911,"results":"18","hashOfConfig":"19"},{"size":1720,"mtime":1611852093699,"results":"20","hashOfConfig":"19"},{"size":3008,"mtime":1612693808609,"results":"21","hashOfConfig":"19"},{"size":2640,"mtime":1612693860625,"results":"22","hashOfConfig":"19"},{"size":953,"mtime":1611689007420,"results":"23","hashOfConfig":"19"},{"size":292,"mtime":1611503272653,"results":"24","hashOfConfig":"19"},{"size":575,"mtime":1611503272707,"results":"25","hashOfConfig":"19"},{"size":2116,"mtime":1612298830788,"results":"26","hashOfConfig":"19"},{"size":2721,"mtime":1612976617448,"results":"27","hashOfConfig":"19"},{"size":3127,"mtime":1612693828458,"results":"28","hashOfConfig":"19"},{"size":1483,"mtime":1612977132731,"results":"29","hashOfConfig":"19"},{"size":2710,"mtime":1612693833901,"results":"30","hashOfConfig":"19"},{"size":379,"mtime":1611503320822,"results":"31","hashOfConfig":"19"},{"size":370,"mtime":1611503320772,"results":"32","hashOfConfig":"19"},{"size":1571,"mtime":1612298628740,"results":"33","hashOfConfig":"19"},{"size":2250,"mtime":1612693763160,"results":"34","hashOfConfig":"19"},{"size":73,"mtime":1612693593534,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"v2cmw2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\notes-app\\client\\src\\index.js",[],["74","75"],"D:\\notes-app\\client\\src\\App.js",[],"D:\\notes-app\\client\\src\\components\\Signin.js",[],"D:\\notes-app\\client\\src\\components\\Signup.js",[],"D:\\notes-app\\client\\src\\components\\Welcome.js",[],"D:\\notes-app\\client\\src\\components\\NotFound.js",[],"D:\\notes-app\\client\\src\\components\\ProtectedRoute.js",[],"D:\\notes-app\\client\\src\\components\\Nav\\Header.js",[],"D:\\notes-app\\client\\src\\components\\Notes\\Notes.js",["76","77"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../config/serverURL\";\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport { NoteContext } from \"../../context/NoteContext\";\r\nimport \"../../style/Notes.scss\";\r\nimport \"../../style/layout.scss\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst MainPage = () => {\r\n  const { userNotes, setUserNotes } = useContext(NoteContext);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      const res = await fetch(`${SERVER_URL}/notes/get`, {\r\n        method: \"GET\",\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n      const data = await res.json();\r\n      if (data) {\r\n        const renderNotes = data.map(({ _id, title, createdAt }) => {\r\n          return (\r\n            <div key={_id} className=\"notes-data\">\r\n              <div className=\"note-title\">\r\n                <Link to={`note/${_id}`}>\r\n                  <p className=\"note-title-element\">{title}</p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"note-date\">\r\n                <p className=\"note-date-element\">{createdAt.slice(0, 10)}</p>\r\n              </div>\r\n              <div className=\"note-button\">\r\n                <Link to={`note/${_id}`}>\r\n                  <button className=\"edit-button\">\r\n                    <EditIcon />\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n              <div className=\"note-button\">\r\n                <button\r\n                  className=\"delete-button\"\r\n                  onClick={() => deleteNote(_id)}\r\n                >\r\n                  <DeleteIcon />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n        setUserNotes(renderNotes);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function deleteNote(userId) {\r\n    const res = await fetch(`${SERVER_URL}/note/delete`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: userId,\r\n      }),\r\n    });\r\n    history.push(\"/\");\r\n    history.push(\"/notes\");\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <h1 className=\"header-text\">Moje notatki</h1>\r\n        </header>\r\n        <div className=\"main\">\r\n          <div className=\"notes-info\">{userNotes}</div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","D:\\notes-app\\client\\src\\components\\Notes\\NoteDetails.js",["78"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../config/serverURL\";\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport \"../../style/NoteDetails.scss\";\r\nimport \"../../style/layout.scss\";\r\nimport \"../../style/button.scss\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst NoteDetails = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [contentError, setContentError] = useState(\"\");\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const prevNote = usePrevious(noteContent);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      const res = await fetch(`${SERVER_URL}/note/get`, {\r\n        method: \"GET\",\r\n        headers: { \"x-auth-token\": token, \"note-id\": id },\r\n      });\r\n\r\n      const { title, content } = await res.json();\r\n\r\n      setNoteTitle(title);\r\n      setNoteContent(content);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function updateNote() {\r\n    const res = await fetch(`${SERVER_URL}/note/update`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id,\r\n        content: noteContent,\r\n        title: noteTitle,\r\n      }),\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (data.errors) {\r\n      setContentError(\"Brakuje tytu≈Çu lub tre≈õci\");\r\n      setTimeout(() => {\r\n        setContentError(\"\");\r\n      }, 2000);\r\n    } else {\r\n      history.push(\"/notes\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <ArrowBackIcon\r\n            className=\"arrow-back-icon\"\r\n            style={{ fontSize: \"2rem\" }}\r\n            onClick={() => {\r\n              history.push(\"/notes\");\r\n            }}\r\n          />\r\n          <textarea\r\n            value={noteTitle}\r\n            onChange={(e) => setNoteTitle(e.target.value)}\r\n            className=\"header-textarea\"\r\n            maxLength=\"20\"\r\n          >\r\n            {noteTitle}\r\n          </textarea>\r\n        </header>\r\n        <div className=\"main-notes\">\r\n          <textarea\r\n            className=\"note-details-content\"\r\n            value={noteContent}\r\n            onChange={(e) => setNoteContent(e.target.value)}\r\n          ></textarea>\r\n          {contentError ? (\r\n            <span className=\"error\">\r\n              <InfoIcon />\r\n              {contentError}\r\n            </span>\r\n          ) : null}\r\n\r\n          {prevNote ? (\r\n            <button className=\"update-note-button\" onClick={updateNote}>\r\n              Zapisz\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n","D:\\notes-app\\client\\src\\context\\UserContext.js",["79"],"D:\\notes-app\\client\\src\\components\\Notes\\AddNote.js",[],"D:\\notes-app\\client\\src\\context\\NoteContext.js",[],"D:\\notes-app\\client\\src\\context\\AuthContext.js",[],"D:\\notes-app\\client\\src\\components\\Nav\\Navbar.js",[],"D:\\notes-app\\client\\src\\components\\Notes\\SearchNote.js",["80"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../config/serverURL\";\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport \"../../style/form.scss\";\r\nimport \"../../style/button.scss\";\r\nimport \"../../style/layout.scss\";\r\n\r\nconst SearchNote = () => {\r\n  const [note, setNote] = useState(\"\");\r\n  const [foundNote, setFoundNote] = useState([]);\r\n  const { userData } = useContext(UserContext);\r\n\r\n  async function fetchData(e) {\r\n    e.preventDefault();\r\n    const res = await fetch(`${SERVER_URL}/note/search`, {\r\n      method: \"GET\",\r\n      headers: { \"user-id\": userData.user, \"note-title\": note },\r\n    });\r\n    const data = await res.json();\r\n    const renderNotes = data.map(({ _id, title }) => {\r\n      return (\r\n        <div key={_id} className=\"notes-data\">\r\n          <div className=\"note-title\">\r\n            <Link to={`/note/${_id}`}>\r\n              <p className=\"note-title-element\" style={{ fontSize: \"1.6rem\" }}>\r\n                {title}\r\n              </p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let isNoteExist =\r\n      renderNotes.length > 0 ? (\r\n        renderNotes\r\n      ) : (\r\n        <span>Nie znaleziono notatki :(</span>\r\n      );\r\n    setFoundNote(isNoteExist);\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <h1 className=\"header-text\">Szukaj notatki</h1>\r\n        </header>\r\n        <form className=\"form-search-note\" onSubmit={fetchData}>\r\n          <input\r\n            className=\"input-search-note\"\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setNote(e.target.value);\r\n            }}\r\n            placeholder=\"Wpisz tytu≈Ç...\"\r\n          />\r\n          <button className=\"search-button\">\r\n            <ArrowForwardIcon style={{ fontSize: \"2rem\" }} />\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"main-search\">{foundNote}</div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchNote;\r\n","D:\\notes-app\\client\\src\\config\\serverURL.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":59,"column":6,"nodeType":"87","endLine":59,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":62,"column":11,"nodeType":"91","messageId":"92","endLine":62,"endColumn":14},{"ruleId":"85","severity":1,"message":"93","line":42,"column":6,"nodeType":"87","endLine":42,"endColumn":8,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"95","line":45,"column":6,"nodeType":"87","endLine":45,"endColumn":8,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deleteNote' and 'setUserNotes'. Either include them or remove the dependency array.","ArrayExpression",["100"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["101"],"React Hook useEffect has missing dependencies: 'history' and 'setIsAuth'. Either include them or remove the dependency array.",["102"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [deleteNote, setUserNotes]",{"range":"109","text":"110"},"Update the dependencies array to be: [id]",{"range":"111","text":"112"},"Update the dependencies array to be: [history, setIsAuth]",{"range":"113","text":"114"},[1993,1995],"[deleteNote, setUserNotes]",[1299,1301],"[id]",[1299,1301],"[history, setIsAuth]"]