[{"D:\\notes-app\\client\\src\\index.js":"1","D:\\notes-app\\client\\src\\App.js":"2","D:\\notes-app\\client\\src\\components\\Signin.js":"3","D:\\notes-app\\client\\src\\components\\Signup.js":"4","D:\\notes-app\\client\\src\\components\\Welcome.js":"5","D:\\notes-app\\client\\src\\components\\NotFound.js":"6","D:\\notes-app\\client\\src\\components\\ProtectedRoute.js":"7","D:\\notes-app\\client\\src\\components\\Nav\\Header.js":"8","D:\\notes-app\\client\\src\\components\\Notes\\Notes.js":"9","D:\\notes-app\\client\\src\\components\\Notes\\NoteDetails.js":"10","D:\\notes-app\\client\\src\\context\\UserContext.js":"11","D:\\notes-app\\client\\src\\components\\Notes\\AddNote.js":"12","D:\\notes-app\\client\\src\\context\\NoteContext.js":"13","D:\\notes-app\\client\\src\\context\\AuthContext.js":"14","D:\\notes-app\\client\\src\\components\\Nav\\Navbar.js":"15","D:\\notes-app\\client\\src\\components\\Notes\\SearchNote.js":"16","D:\\notes-app\\client\\src\\config\\serverURL.js":"17"},{"size":197,"mtime":1611503242911,"results":"18","hashOfConfig":"19"},{"size":1720,"mtime":1611852093699,"results":"20","hashOfConfig":"19"},{"size":2943,"mtime":1613076159379,"results":"21","hashOfConfig":"19"},{"size":2575,"mtime":1613076411890,"results":"22","hashOfConfig":"19"},{"size":924,"mtime":1612989130680,"results":"23","hashOfConfig":"19"},{"size":292,"mtime":1611503272653,"results":"24","hashOfConfig":"19"},{"size":575,"mtime":1611503272707,"results":"25","hashOfConfig":"19"},{"size":1659,"mtime":1613151357336,"results":"26","hashOfConfig":"19"},{"size":2641,"mtime":1613153058294,"results":"27","hashOfConfig":"19"},{"size":3073,"mtime":1613156654742,"results":"28","hashOfConfig":"19"},{"size":1483,"mtime":1612977132731,"results":"29","hashOfConfig":"19"},{"size":2721,"mtime":1613157936340,"results":"30","hashOfConfig":"19"},{"size":379,"mtime":1611503320822,"results":"31","hashOfConfig":"19"},{"size":370,"mtime":1611503320772,"results":"32","hashOfConfig":"19"},{"size":1390,"mtime":1613127384511,"results":"33","hashOfConfig":"19"},{"size":2190,"mtime":1613203710148,"results":"34","hashOfConfig":"19"},{"size":73,"mtime":1612693593534,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"v2cmw2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\notes-app\\client\\src\\index.js",[],["74","75"],"D:\\notes-app\\client\\src\\App.js",[],"D:\\notes-app\\client\\src\\components\\Signin.js",[],"D:\\notes-app\\client\\src\\components\\Signup.js",[],"D:\\notes-app\\client\\src\\components\\Welcome.js",[],"D:\\notes-app\\client\\src\\components\\NotFound.js",[],"D:\\notes-app\\client\\src\\components\\ProtectedRoute.js",[],"D:\\notes-app\\client\\src\\components\\Nav\\Header.js",[],"D:\\notes-app\\client\\src\\components\\Notes\\Notes.js",["76","77"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../config/serverURL\";\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport { NoteContext } from \"../../context/NoteContext\";\r\nimport \"../../style/Notes.scss\";\r\nimport \"../../style/layout.scss\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst MainPage = () => {\r\n  const { userNotes, setUserNotes } = useContext(NoteContext);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      const res = await fetch(`${SERVER_URL}/notes/get`, {\r\n        method: \"GET\",\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n      const data = await res.json();\r\n      const renderNotes = data.map(({ _id, title, createdAt }) => {\r\n        return (\r\n          <div key={_id} className=\"notes-data\">\r\n            <div className=\"note-title\">\r\n              <Link to={`note/${_id}`}>\r\n                <p className=\"note-title-element\">{title}</p>\r\n              </Link>\r\n            </div>\r\n            <div className=\"note-date\">\r\n              <p className=\"note-date-element\">{createdAt.slice(0, 10)}</p>\r\n            </div>\r\n            <div className=\"note-button\">\r\n              <Link to={`note/${_id}`}>\r\n                <button className=\"edit-button\">\r\n                  <EditIcon className=\"edit-button-icon\" />\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <div className=\"note-button\">\r\n              <button className=\"delete-button\" onClick={() => deleteNote(_id)}>\r\n                <DeleteIcon className=\"delete-button-icon\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n      setUserNotes(renderNotes);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function deleteNote(userId) {\r\n    const res = await fetch(`${SERVER_URL}/note/delete`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: userId,\r\n      }),\r\n    });\r\n    history.push(\"/\");\r\n    history.push(\"/notes\");\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <h1 className=\"header-text\">Moje notatki</h1>\r\n        </header>\r\n        <div className=\"main\">\r\n          <div className=\"notes-info\">{userNotes}</div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","D:\\notes-app\\client\\src\\components\\Notes\\NoteDetails.js",["78"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { SERVER_URL } from \"../../config/serverURL\";\r\nimport Navbar from \"../Nav/Navbar\";\r\nimport \"../../style/NoteDetails.scss\";\r\nimport \"../../style/layout.scss\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst NoteDetails = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [contentError, setContentError] = useState(\"\");\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const prevNote = usePrevious(noteContent);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      const res = await fetch(`${SERVER_URL}/note/get`, {\r\n        method: \"GET\",\r\n        headers: { \"x-auth-token\": token, \"note-id\": id },\r\n      });\r\n\r\n      const { title, content } = await res.json();\r\n\r\n      setNoteTitle(title);\r\n      setNoteContent(content);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function updateNote() {\r\n    const res = await fetch(`${SERVER_URL}/note/update`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id,\r\n        content: noteContent,\r\n        title: noteTitle,\r\n      }),\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (data.errors) {\r\n      setContentError(\"Brakuje tytułu lub treści\");\r\n      setTimeout(() => {\r\n        setContentError(\"\");\r\n      }, 2000);\r\n    } else {\r\n      history.push(\"/notes\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Navbar />\r\n      <section className=\"container-page\">\r\n        <header className=\"container-header\">\r\n          <ArrowBackIcon\r\n            className=\"arrow-back-icon\"\r\n            onClick={() => {\r\n              history.push(\"/notes\");\r\n            }}\r\n          />\r\n          <textarea\r\n            value={noteTitle}\r\n            onChange={(e) => setNoteTitle(e.target.value)}\r\n            className=\"header-textarea\"\r\n            maxLength=\"20\"\r\n          >\r\n            {noteTitle}\r\n          </textarea>\r\n        </header>\r\n        <div className=\"main-notes\">\r\n          <textarea\r\n            className=\"note-details-content\"\r\n            value={noteContent}\r\n            onChange={(e) => setNoteContent(e.target.value)}\r\n          ></textarea>\r\n          {contentError ? (\r\n            <span className=\"error\">\r\n              <InfoIcon className=\"error-icon\" />\r\n              {contentError}\r\n            </span>\r\n          ) : null}\r\n\r\n          {prevNote ? (\r\n            <button className=\"update-note-button\" onClick={updateNote}>\r\n              Zapisz\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n","D:\\notes-app\\client\\src\\context\\UserContext.js",["79"],"import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { SERVER_URL } from \"../config/serverURL\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n  const [userData, setUserData] = useState({\r\n    token: \"\",\r\n    user: \"\",\r\n  });\r\n  const { setIsAuth } = useContext(AuthContext);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const isLogin = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n      }\r\n      const tokenRes = await fetch(`${SERVER_URL}/validToken`, {\r\n        method: \"POST\",\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n      const tokenIsValid = await tokenRes.json();\r\n\r\n      if (tokenIsValid) {\r\n        const userRes = await fetch(`${SERVER_URL}/user`, {\r\n          method: \"GET\",\r\n          headers: { \"x-auth-token\": token },\r\n        });\r\n        const userData = await userRes.json();\r\n        setUserData({\r\n          token,\r\n          user: userData.id,\r\n        });\r\n        setIsAuth(true);\r\n        history.push(\"/notes\");\r\n      }\r\n    };\r\n\r\n    isLogin();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userData, setUserData }}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","D:\\notes-app\\client\\src\\components\\Notes\\AddNote.js",[],"D:\\notes-app\\client\\src\\context\\NoteContext.js",[],"D:\\notes-app\\client\\src\\context\\AuthContext.js",[],"D:\\notes-app\\client\\src\\components\\Nav\\Navbar.js",[],"D:\\notes-app\\client\\src\\components\\Notes\\SearchNote.js",[],"D:\\notes-app\\client\\src\\config\\serverURL.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":53,"column":6,"nodeType":"86","endLine":53,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":56,"column":11,"nodeType":"90","messageId":"91","endLine":56,"endColumn":14},{"ruleId":"84","severity":1,"message":"92","line":41,"column":6,"nodeType":"86","endLine":41,"endColumn":8,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"94","line":45,"column":6,"nodeType":"86","endLine":45,"endColumn":8,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deleteNote' and 'setUserNotes'. Either include them or remove the dependency array.","ArrayExpression",["98"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has missing dependencies: 'history' and 'setIsAuth'. Either include them or remove the dependency array.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [deleteNote, setUserNotes]",{"range":"107","text":"108"},"Update the dependencies array to be: [id]",{"range":"109","text":"110"},"Update the dependencies array to be: [history, setIsAuth]",{"range":"111","text":"112"},[1913,1915],"[deleteNote, setUserNotes]",[1264,1266],"[id]",[1299,1301],"[history, setIsAuth]"]