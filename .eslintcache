[{"D:\\MERN-notes-app-frontend\\src\\index.js":"1","D:\\MERN-notes-app-frontend\\src\\App.js":"2","D:\\MERN-notes-app-frontend\\src\\components\\ProtectedRoute.js":"3","D:\\MERN-notes-app-frontend\\src\\context\\UserContext.js":"4","D:\\MERN-notes-app-frontend\\src\\context\\NoteContext.js":"5","D:\\MERN-notes-app-frontend\\src\\context\\AuthContext.js":"6","D:\\MERN-notes-app-frontend\\src\\config\\serverURL.js":"7","D:\\MERN-notes-app-frontend\\src\\request\\get_notes.js":"8","D:\\MERN-notes-app-frontend\\src\\pages\\AddNote.js":"9","D:\\MERN-notes-app-frontend\\src\\pages\\Home.js":"10","D:\\MERN-notes-app-frontend\\src\\pages\\Signup.js":"11","D:\\MERN-notes-app-frontend\\src\\pages\\Signin.js":"12","D:\\MERN-notes-app-frontend\\src\\pages\\NotFound.js":"13","D:\\MERN-notes-app-frontend\\src\\components\\Note.js":"14","D:\\MERN-notes-app-frontend\\src\\components\\Layout.js":"15","D:\\MERN-notes-app-frontend\\src\\components\\DeleteModal.js":"16","D:\\MERN-notes-app-frontend\\src\\components\\EditModal.js":"17","D:\\MERN-notes-app-frontend\\src\\request\\post_auth.js":"18","D:\\MERN-notes-app-frontend\\src\\request\\post_add_note.js":"19","D:\\MERN-notes-app-frontend\\src\\request\\post_update_note.js":"20"},{"size":207,"mtime":1623509491352,"results":"21","hashOfConfig":"22"},{"size":1951,"mtime":1626004654718,"results":"23","hashOfConfig":"22"},{"size":575,"mtime":1623261763543,"results":"24","hashOfConfig":"22"},{"size":1451,"mtime":1623261763543,"results":"25","hashOfConfig":"22"},{"size":379,"mtime":1623261763543,"results":"26","hashOfConfig":"22"},{"size":370,"mtime":1623261763543,"results":"27","hashOfConfig":"22"},{"size":73,"mtime":1623261763543,"results":"28","hashOfConfig":"22"},{"size":329,"mtime":1626004707383,"results":"29","hashOfConfig":"22"},{"size":3636,"mtime":1626115368103,"results":"30","hashOfConfig":"22"},{"size":2139,"mtime":1626193974255,"results":"31","hashOfConfig":"22"},{"size":4235,"mtime":1626006878555,"results":"32","hashOfConfig":"22"},{"size":4406,"mtime":1626006873409,"results":"33","hashOfConfig":"22"},{"size":292,"mtime":1626004714637,"results":"34","hashOfConfig":"22"},{"size":1629,"mtime":1626003071947,"results":"35","hashOfConfig":"22"},{"size":5169,"mtime":1626018392645,"results":"36","hashOfConfig":"22"},{"size":2708,"mtime":1626004724683,"results":"37","hashOfConfig":"22"},{"size":3675,"mtime":1626018904666,"results":"38","hashOfConfig":"22"},{"size":378,"mtime":1626004704466,"results":"39","hashOfConfig":"22"},{"size":389,"mtime":1626004708964,"results":"40","hashOfConfig":"22"},{"size":426,"mtime":1626004702902,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"19k92hb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\MERN-notes-app-frontend\\src\\index.js",[],["88","89"],"D:\\MERN-notes-app-frontend\\src\\App.js",["90","91"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\nimport Signup from \"./pages/Signup\";\r\nimport Signin from \"./pages/Signin\";\r\nimport AddNote from \"./pages/AddNote\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport UserContextProvider from \"./context/UserContext\";\r\nimport NoteContextProvider from \"./context/NoteContext\";\r\nimport AuthContextProvider from \"./context/AuthContext\";\r\nimport Home from \"./pages/Home\";\r\nimport \"./style/font.scss\";\r\nimport \"./style/config.scss\";\r\nimport { pink, purple, red, teal } from \"@material-ui/core/colors\";\r\nimport Layout from \"./components/Layout\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: teal,\r\n    secondary: pink,\r\n    error: {\r\n      main: red[500],\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"Lato\",\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <AuthContextProvider>\r\n          <UserContextProvider>\r\n            <NoteContextProvider>\r\n              <Layout>\r\n                <Switch>\r\n                  <Route path=\"/\" exact>\r\n                    <Redirect to=\"/notes\" />\r\n                  </Route>\r\n                  <Route path=\"/signin\" component={Signin} />\r\n                  <Route path=\"/signup\" component={Signup} />\r\n                  <ProtectedRoute path=\"/notes\" exact component={Home} />\r\n                  <ProtectedRoute path=\"/note/add\" component={AddNote} />\r\n                  <Route path=\"*\" component={NotFound} />\r\n                </Switch>\r\n              </Layout>\r\n            </NoteContextProvider>\r\n          </UserContextProvider>\r\n        </AuthContextProvider>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\MERN-notes-app-frontend\\src\\components\\ProtectedRoute.js",[],"D:\\MERN-notes-app-frontend\\src\\context\\UserContext.js",["92"],"import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { SERVER_URL } from \"../config/serverURL\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n  const [userData, setUserData] = useState({\r\n    token: \"\",\r\n    user: \"\",\r\n  });\r\n  const { setIsAuth } = useContext(AuthContext);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const isLogin = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        return;\r\n      }\r\n      const tokenRes = await fetch(`${SERVER_URL}/validToken`, {\r\n        method: \"POST\",\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n      const tokenIsValid = await tokenRes.json();\r\n\r\n      if (tokenIsValid) {\r\n        const userRes = await fetch(`${SERVER_URL}/user`, {\r\n          method: \"GET\",\r\n          headers: { \"x-auth-token\": token },\r\n        });\r\n        const userData = await userRes.json();\r\n        setUserData({\r\n          token,\r\n          user: userData.id,\r\n        });\r\n        setIsAuth(true);\r\n        history.push(\"/notes\");\r\n      }\r\n    };\r\n\r\n    isLogin();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userData, setUserData }}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","D:\\MERN-notes-app-frontend\\src\\context\\NoteContext.js",[],"D:\\MERN-notes-app-frontend\\src\\context\\AuthContext.js",[],"D:\\MERN-notes-app-frontend\\src\\config\\serverURL.js",[],"D:\\MERN-notes-app-frontend\\src\\request\\get_notes.js",[],"D:\\MERN-notes-app-frontend\\src\\pages\\AddNote.js",[],"D:\\MERN-notes-app-frontend\\src\\pages\\Home.js",["93","94","95"],"D:\\MERN-notes-app-frontend\\src\\pages\\Signup.js",[],"D:\\MERN-notes-app-frontend\\src\\pages\\Signin.js",[],"D:\\MERN-notes-app-frontend\\src\\pages\\NotFound.js",[],"D:\\MERN-notes-app-frontend\\src\\components\\Note.js",[],"D:\\MERN-notes-app-frontend\\src\\components\\Layout.js",["96"],"import {\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { NoteContext } from \"../context/NoteContext\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(3),\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    active: {\r\n      backgroundColor: \"#eeeeee\",\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    menuButton: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    appbar: {\r\n      width: \"100%\",\r\n      backgroundColor: pink[900],\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    link: {\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        textDecoration: \"underline\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst Layout = ({ children }) => {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { setUserData } = useContext(UserContext);\r\n  const { setUserNotes } = useContext(NoteContext);\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n\r\n  const menuItems = [\r\n    {\r\n      text: \"My notes\",\r\n      icon: <SubjectOutlined color=\"secondary\" />,\r\n      path: \"/notes\",\r\n    },\r\n    {\r\n      text: \"Create Note\",\r\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\r\n      path: \"/note/add\",\r\n    },\r\n  ];\r\n\r\n  function userLogout() {\r\n    setUserData({\r\n      token: \"\",\r\n      id: \"\",\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n    setUserNotes([]);\r\n    setIsAuth(false);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function handleDrawerToggle() {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n\r\n  function changePath(path) {\r\n    history.push(path);\r\n    setMobileOpen(false);\r\n  }\r\n\r\n  const drawer = (\r\n    <>\r\n      <div>\r\n        <Typography variant=\"h5\" className={classes.title}>\r\n          <Link to=\"/\">Notes App</Link>\r\n        </Typography>\r\n      </div>\r\n      <List>\r\n        {menuItems.map((item) => {\r\n          return (\r\n            <ListItem\r\n              key={item.text}\r\n              button\r\n              onClick={() => changePath(item.path)}\r\n              className={\r\n                location.pathname === item.path ? classes.active : null\r\n              }\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appbar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          {isAuth ? (\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          ) : null}\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            <Link to=\"/\" style={{ color: \"#fff\" }}>\r\n              Notes App\r\n            </Link>\r\n          </Typography>\r\n          <Typography className={classes.link} onClick={userLogout}>\r\n            {isAuth ? \"Logout\" : \"Login\"}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {isAuth ? (\r\n        <>\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              variant=\"temporary\"\r\n              anchor=\"left\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              className={classes.drawer}\r\n              classes={{ paper: classes.drawerPaper }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </>\r\n      ) : null}\r\n\r\n      <div className={classes.toolbar}></div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","D:\\MERN-notes-app-frontend\\src\\components\\DeleteModal.js",["97"],"import Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { SERVER_URL } from \"../config/serverURL\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { pink, teal } from \"@material-ui/core/colors\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst DeleteModal = ({ open, setOpen, note }) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    modalWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      height: \"100%\",\r\n    },\r\n    modal: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      width: 400,\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(5),\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    buttonWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n      marginTop: \"3vh\",\r\n      width: \"100%\",\r\n    },\r\n    btn: {\r\n      color: \"#fff\",\r\n      backgroundColor: pink[800],\r\n      \"&:hover\": {\r\n        backgroundColor: pink[900],\r\n      },\r\n    },\r\n    header: {\r\n      fontWeight: 700,\r\n      marginBottom: 30,\r\n      textAlign: \"center\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  async function handleDelete() {\r\n    await fetch(`${SERVER_URL}/note/delete`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: note._id,\r\n      }),\r\n    });\r\n\r\n    history.push(\"/\");\r\n    history.push(\"/notes\");\r\n  }\r\n  const body = (\r\n    <div className={classes.modalWrapper}>\r\n      <div className={classes.modal}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h2\"\r\n          color=\"textPrimary\"\r\n          className={classes.header}\r\n        >\r\n          Are you sure you want delete this note?\r\n        </Typography>\r\n        <div className={classes.buttonWrapper}>\r\n          <Button\r\n            className={classes.btn}\r\n            variant=\"contained\"\r\n            onClick={handleDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n          <Button\r\n            className={classes.btn}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      {body}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","D:\\MERN-notes-app-frontend\\src\\components\\EditModal.js",["98","99"],"import { useState, useEffect } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { update_note } from \"../request/post_update_note\";\r\n\r\nconst EditModal = ({ open, setOpen, note }) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    modalWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      height: \"100%\",\r\n    },\r\n    modal: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      width: 600,\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(5),\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    buttonWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n      marginTop: \"2vh\",\r\n      width: \"100%\",\r\n    },\r\n    btn: {\r\n      color: \"#fff\",\r\n      backgroundColor: pink[800],\r\n      \"&:hover\": {\r\n        backgroundColor: pink[900],\r\n      },\r\n    },\r\n    title: {\r\n      width: \"100%\",\r\n      fontSize: \"1.4rem\",\r\n      marginBottom: 30,\r\n    },\r\n    content: {\r\n      width: \"100%\",\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"1.43\",\r\n      marginBottom: 30,\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [contentError, setContentError] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNoteContent(note.content);\r\n    setNoteTitle(note.title);\r\n  }, []);\r\n\r\n  async function handleUpdate() {\r\n    const data = await update_note(\r\n      \"/note/update\",\r\n      note._id,\r\n      noteContent,\r\n      noteTitle\r\n    );\r\n\r\n    if (data.errors) {\r\n      setContentError(\"Brakuje tytułu lub treści\");\r\n      setTimeout(() => {\r\n        setContentError(\"\");\r\n      }, 2000);\r\n    } else {\r\n      history.push(\"/\");\r\n      history.push(\"/notes\");\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <div className={classes.modalWrapper}>\r\n      <div className={classes.modal}>\r\n        <TextareaAutosize\r\n          aria-label=\"minimum height\"\r\n          minRows={3}\r\n          placeholder=\"Title...\"\r\n          className={classes.title}\r\n          onChange={(e) => setNoteTitle(e.target.value)}\r\n        >\r\n          {note.title}\r\n        </TextareaAutosize>\r\n        <TextareaAutosize\r\n          aria-label=\"minimum height\"\r\n          minRows={15}\r\n          placeholder=\"Content...\"\r\n          className={classes.content}\r\n          color=\"textSecondary\"\r\n          onChange={(e) => setNoteContent(e.target.value)}\r\n        >\r\n          {note.content}\r\n        </TextareaAutosize>\r\n        <div className={classes.buttonWrapper}>\r\n          <Button\r\n            className={classes.btn}\r\n            variant=\"contained\"\r\n            onClick={handleUpdate}\r\n          >\r\n            Update\r\n          </Button>\r\n\r\n          <Button\r\n            className={classes.btn}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      {body}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","D:\\MERN-notes-app-frontend\\src\\request\\post_auth.js",[],"D:\\MERN-notes-app-frontend\\src\\request\\post_add_note.js",[],"D:\\MERN-notes-app-frontend\\src\\request\\post_update_note.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":21,"column":16,"nodeType":"106","messageId":"107","endLine":21,"endColumn":22},{"ruleId":"104","severity":1,"message":"108","line":23,"column":10,"nodeType":"106","messageId":"107","endLine":23,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":45,"column":6,"nodeType":"111","endLine":45,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":37,"column":6,"nodeType":"111","endLine":37,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":54,"column":9,"nodeType":"117","endLine":54,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":63,"column":26,"nodeType":"120","messageId":"121","endLine":63,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":52,"column":5,"nodeType":"124","messageId":"125","endLine":52,"endColumn":15},{"ruleId":"104","severity":1,"message":"126","line":6,"column":16,"nodeType":"106","messageId":"107","endLine":6,"endColumn":20},{"ruleId":"104","severity":1,"message":"127","line":59,"column":10,"nodeType":"106","messageId":"107","endLine":59,"endColumn":22},{"ruleId":"109","severity":1,"message":"128","line":68,"column":6,"nodeType":"111","endLine":68,"endColumn":8,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setIsAuth'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'setUserNotes'. Either include it or remove the dependency array.",["133"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-dupe-keys","Duplicate key 'menuButton'.","ObjectExpression","unexpected","'teal' is defined but never used.","'contentError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'note.content' and 'note.title'. Either include them or remove the dependency array. If 'setNoteContent' needs the current value of 'note.content', you can also switch to useReducer instead of useState and read 'note.content' in the reducer.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [history, setIsAuth]",{"range":"141","text":"142"},"Update the dependencies array to be: [setUserNotes]",{"range":"143","text":"144"},"Update the dependencies array to be: [note.content, note.title]",{"range":"145","text":"146"},[1267,1269],"[history, setIsAuth]",[1030,1032],"[setUserNotes]",[1865,1867],"[note.content, note.title]"]